[About]
Version=1.21
Author=Wolfik
Mail=wolfik@doctor.com

[Type]
Class=Element
Info=Сжатие/восстановление данных по алгоритму LZMA
Tab=Files

[Property]
DictionarySize=Размер словаря для восстановления данных (от 0 до 28). Вычисляется как D=2^N, в последствии, при расшифровке, требуется D байт памяти (RAM). 20 = 1Mb|1|20
NumFastBytes=Порядок fastbytes (от 5 до 273). Обычно, большее число дает небольшой прирост процента сжатия и замедляет процесс кодирования|1|128
MatchFinder=Алгоритм вычисления хэша|4|1|bt2,bt4,bt4b
Lc=Number of literal context bits|4|4|0,1,2,3,4,5,6,7,8
Lp=Number of literal pos bits|4|0|0,1,2,3,4
Pb=Number of pos bits|4|3|0,1,2,3,4
EndMarker=Записывать в конец потока данные о его окончании. При False, в заголовок потока будет сделана запись о его исходном размере|14|1|True,False
ProgressInterval=Интервал создания события, информирующего о состоянии прогресса кодирования|1|50

[Methods]
doCompress=Сжимает данные ARG(Stream, DictionarySize, NumFastBytes, ProgressInterval)|1|
doDeCompress=Восстанавливает данные ARG(Stream, ProgressInterval)|1|
onStream=Событие происходит всякий раз после сжатия/восстановления данных и возвращает их в поток ARG(Stream)|2|
*onProgress=Событие происходит через заданный промежуток ProgressInterval и выдает в поток номер кодируемого байта ARG(Progress)|2|
*onProgressMax=Событие происходит один раз перед началом кодирования потока и выдает его изначальный размер ARG(ProgressMax)|2|
*onError=Событие происходит в случае возникновении ошибки, и выдает ее код в поток ARG(Error)|2|
Stream=Определяет идентификатор области данных|4|10
*DictionarySize=Размер словаря для восстановления данных (от 0 до 28)|4|1
*NumFastBytes=Порядок fastbytes (от 5 до 273)|4|1
*ProgressInterval=Интервал создания события, информирующего о состоянии прогресса кодирования|4|1
*DestSize=Содержит размер данных после операции|3|1
*Position=Содержит текущую позицию прогресса во время выполнения кодирования|3|1
*OriginalSize=Содержит размер исходных данных, обновляется сразу после начала кодирования|3|1