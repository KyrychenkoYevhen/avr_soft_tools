#
# Example fpc.cfg for Free Pascal Compiler
#

# ----------------------
# Defines (preprocessor)
# ----------------------

#
# nested #IFNDEF, #IFDEF, #ENDIF, #ELSE, #DEFINE, #UNDEF are allowed
#
# -d is the same as #DEFINE
# -u is the same as #UNDEF
#

#
# Some examples (for switches see below, and the -? helppages)
#
# Try compiling with the -dRELEASE or -dDEBUG on the commandline
#

# For a release compile with optimizes and strip debuginfo
#IFDEF RELEASE
  -OG2p3
  -Xs
  #WRITE Compiling Release Version
#ENDIF

# ----------------
# Parsing switches
# ----------------

# All assembler blocks are intel styled by default
-Rintel

# All assembler blocks are AT&T styled by default
#-Ratt

# All assembler blocks are directly copied to asm
#-Rdirect

# Semantic checking
#  -S2        switch some Delphi 2 extensions on
#  -Sc        supports operators like C (*=,+=,/= and -=)
#  -Sd        tries to be Delphi compatible
#  -Se<x>     compiler stops after the <x> errors (default is 1)
#  -Sg        allow LABEL and GOTO
#  -Sh        Use ansistrings
#  -Si        support C++ styled INLINE
#  -Sm        support macros like C (global)
#  -So        tries to be TP/BP 7.0 compatible
#  -Sp        tries to be gpc compatible
#  -Ss        constructor name must be init (destructor must be done)
#  -St        allow static keyword in objects
# Allow goto, inline, C-operators
-Sgic

# ---------------
# Code generation
# ---------------

# Uncomment the next line if you always want static/dynamic units by default
# (can be overruled with -CD, -CS at the commandline)
#-CS
#-CD

# Set the default heapsize to 8Mb
#-Ch8000000

# Set default codegeneration checks (iocheck, overflow, range, stack)
#-Ci
#-Co
#-Cr
#-Ct

# Optimizer switches
# -Og        generate smaller code
# -OG        generate faster code (default)
# -Or        keep certain variables in registers (still BUGGY!!!)
# -Ou        enable uncertain optimizations (see docs)
# -O1        level 1 optimizations (quick optimizations)
# -O2        level 2 optimizations (-O1 + slower optimizations)
# -O3        level 3 optimizations (same as -O2u)
# -Op        target processor
#     -Op1  set target processor to 386/486
#     -Op2  set target processor to Pentium/PentiumMMX (tm)
#     -Op3  set target processor to PPro/PII/c6x86/K6 (tm)

# Optimize always for Size and PentiumII
#-Og2p3


# -----------------------
# Set Filenames and Paths
# -----------------------

# Both slashes and backslashes are allowed in paths

# path to the messagefile, not necessary anymore but can be used to override
# the default language
#-Frd:\leng\pp/msg/errore.msg
#-Frd:\leng\pp/msg/errorn.msg
#-Frd:\leng\pp/msg/errores.msg
#-Frd:\leng\pp/msg/errord.msg
#-Frd:\leng\pp/msg/errorr.msg

# path to the gcclib
#-Fld:\leng\pp/lib

# searchpath for includefiles
# release them only if you know what you do
# because this could cause a rebuild of the runtime library
# if you tell them compiler/ide to build the project (FK)
#-Fid:\leng\pp/source/rtl/inc;d:\leng\pp/source/rtl/i386

# searchpath for objectfiles
#-Fod:\leng\pp/source/rtl/inc;d:\leng\pp/source/rtl/i386

# searchpath for units and other system dependent things
#-Fud:\leng\pp/units/$FPCTARGET
#-Fud:\leng\pp/units/$FPCTARGET/*
#-Fud:\leng\pp/units/$FPCTARGET/rtl

# searchpath for libraries
#-Fld:\leng\pp/lib
#-Fl/lib;/usr/lib

# searchpath for tools
# -FDd:\leng\pp/bin/$FPCTARGET

# -------------
# Linking
# -------------

# generate always debugging information for GDB (slows down the compiling
# process)
#-gl

# always pass an option to the linker
#-k-s

# Always strip debuginfo from the executable
-Xs


# -------------
# Miscellaneous
# -------------

# Write always a nice FPC logo ;)
-l

# Verbosity
# e : Show errors (default)       d : Show debug info
# w : Show warnings               u : Show used files
# n : Show notes                  t : Show tried files
# h : Show hints                  m : Show defined macros
# i : Show general info           p : Show compiled procedures
# l : Show linenumbers            c : Show conditionals
# a : Show everything             0 : Show nothing (except errors)

# Display Info, Warnings, Notes and Hints
-viwn
# If you don't want so much verbosity use
#-vw

